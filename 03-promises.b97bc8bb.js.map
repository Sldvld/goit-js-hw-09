{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SA2BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CArCbL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,eAC1BC,EAAa,GAEnB,IAAK,MAAOC,EAAKC,KAAUL,EAASM,UAClCH,EAAWC,GAAOG,OAAOF,GAG3B,IAAMhB,MAAAmB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWP,EAC9B,IAAK,IAAIQ,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCxB,EAAcwB,EAAGH,GACdI,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA+B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBP,EAAA+B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAEhEmB,GAASC,EAEXzB,EAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const formData = new FormData(e.currentTarget);\n  const dataParams = {};\n\n  for (const [key, value] of formData.entries()) {\n    dataParams[key] = Number(value);\n  }\n\n  let { delay, step, amount } = dataParams;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfil\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","formData","FormData","currentTarget","dataParams","key","value","entries","Number","delay1","step","amount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.b97bc8bb.js.map"}